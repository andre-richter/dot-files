# Comments from:
# https://www.void.gr/kargig/blog/2013/12/02/creating-a-new-gpg-key-with-subkeys/
# https://gist.github.com/graffen/37eaa2332ee7e584bfda
# https://gist.github.com/jbouse/2635431
# https://riseup.net/en/gpg-best-practices

# This is the server that --recv-keys, --send-keys, and --search-keys
# will communicate with to receive keys from, send keys to, and search
# for keys on
keyserver hkps://keys.openpgp.org

# When using --refresh-keys, if the key in question has a preferred
# keyserver URL, then disable use of that preferred keyserver to
# refresh the key from
#
# This is useful because (1) it prevents someone from designating an
# insecure method for pulling their key and (2) if the server
# designated uses hkps, the refresh will fail because the ca-cert will
# not match, so the keys will never be refreshed. Note also that an
# attacker could designate a keyserver that they control to monitor
# when or from where you refresh their key.
keyserver-options no-honor-keyserver-url

auto-key-locate keyserver

# When multiple ciphers are supported by all recipients, choose the
# strongest one
personal-digest-preferences SHA512 SHA384 SHA256 SHA224

# When multiple digests are supported by all recipients, choose the
# strongest one
personal-cipher-preferences AES256 AES192 AES CAST5

# Preferences chosen for new keys should prioritize stronger algorithms:
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed

# When making an OpenPGP certification, use a stronger digest than the
# default SHA1:
cert-digest-algo SHA512

cipher-algo AES256
digest-algo SHA512
s2k-mode 3
s2k-cipher-algo AES256
s2k-digest-algo SHA512
s2k-count 65011712

# If you have more than 1 secret key in your keyring, you may want to
# uncomment the following option and set your preferred keyid.
default-key 0x20575b0850e17457

# If you do not pass a recipient to gpg, it will ask for one.  Using
# this option you can encrypt to a default key.  Key validation will
# not be done in this case.  The second form uses the default key as
# default recipient.
default-recipient-self

# when outputting certificates, view user IDs distinctly from keys:
fixed-list-mode

# long keyids are more collision-resistant than short keyids
keyid-format 0xlong

# prevent version string from appearing in your signatures/public keys
no-emit-version

# Disable comment string in clear text signatures and ASCII armored
# messages
no-comments

# You should always know at a glance which User IDs gpg thinks are
# legitimately bound to the keys in your keyring:
list-options show-uid-validity
verify-options show-uid-validity

# List all keys (or the specified ones) along with their fingerprints
with-fingerprint

require-cross-certification

# If you do not use the Latin-1 (ISO-8859-1) charset, you should tell
# GnuPG which is the native character set.  Please check the man page
# for supported character sets.  This character set is only used for
# metadata and not for the actual message which does not undergo any
# translation.  Note that future version of GnuPG will change to UTF-8
# as default character set.  In most cases this option is not required
# GnuPG is able to figure out the correct charset and use that.
charset utf-8

use-agent
